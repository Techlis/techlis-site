      - name: Ensure node_modules exists
        run: mkdir -p node_modules
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install

      - name: Run type checking
        run: pnpm type-check

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Build project
        run: pnpm build

      - name: Upload build artifacts
        if: ${{ !env.ACT && matrix.node-version == '22.x' }}
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22.x"
          cache: "pnpm"

      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: "./lighthouserc.json"
          uploadArtifacts: true
          temporaryPublicStorage: true

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22.x"
          cache: "pnpm"

      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=dist
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
